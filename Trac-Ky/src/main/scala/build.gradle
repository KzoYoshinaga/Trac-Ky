

apply plugin: 'scala'

repositories {
    jcenter()
}

version = '1.0.0'

def win = "x64"

if (win == "x64") {
	jar.baseName = 'KtkrSazanamiFX_x64'
}

if (win == "x86") {
	jar.baseName = 'KtkrSazanamiFX_x86'
}



// In this section you declare the dependencies for your production and test code
dependencies {

	if (win == "x64") {
			compile 'org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:4.3'
	}

	if (win == "x86") {
			compile 'org.eclipse.swt:org.eclipse.swt.win32.win32.x86:4.3'
	}

    compile 'org.scalafx:scalafx_2.11:8.0.102-R11'

	compile 'com.hynnet:DJNativeSwing:1.0.0'

	compile 'com.hynnet:DJNativeSwing-SWT:1.0.0'

	compile 'org.jsoup:jsoup:1.10.3'

	compile 'com.typesafe:config:1.3.1'

	compile 'com.typesafe.akka:akka-actor_2.11:2.5.4'
  	testCompile 'com.typesafe.akka:akka-testkit_2.11:2.5.4'

  	compile 'com.typesafe.akka:akka-stream_2.11:2.5.4'
    testCompile 'com.typesafe.akka:akka-stream-testkit_2.11:2.5.4'

    compile 'org.slf4j:slf4j-api:1.7.21'

    testCompile 'junit:junit:4.12'
}

jar {
	manifest {
	  attributes "Main-Class" : "main.ScalaFXTest"
	}
	from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude 'META-INF/MANIFEST.MF'
		exclude 'META-INF/*.SF'
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
	}
}